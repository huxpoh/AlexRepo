@{
    ViewBag.Title = "TimeReport";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section scripts
{
    <script type="text/javascript">
        function timeReport() {
            var self = this;
            self.Date = ko.observable("");
            self.Project = ko.observable("");
            self.Task = ko.observable("");
            self.Type = ko.observable("");
            self.Description = ko.observable("");
            self.Duration = ko.observable(0);
            self.Overtime = ko.observable(0);
        };

        var TimeReportViewModel = function (items) {
            var self = this;
            self.items = ko.observableArray(items);
            self.repository = [];


            self.FilterProject = ko.observable("");
            self.FilterTotalHours = ko.observable(0);
            self.FilterTotalOverTime = ko.observable(0);

            self.FilterDateFrom = ko.observable("");
            self.FilterDateTo = ko.observable("");

            self.PopulateArray = function() {
                $.ajax({
                    url: "/Home/GetTimeReport",
                    async:true,
                    context: document.body
                }).done(function (data) {
                    self.items(data.GridList);
                    self.repository = data.GridList;
                });
            };

            self.Filter = function () {
                var result = [];
                for (var i = 0; i < self.repository.length; i++) {
                    if (self.repository[i].Project == self.FilterProject()) {
                        self.FilterTotalHours(self.FilterTotalHours() + self.repository[i].Duration);
                        self.FilterTotalOverTime(self.FilterTotalOverTime() + self.repository[i].Overtime);
                        result.push(self.repository[i]);
                    }
                }
                $("#Res").show();
                self.items(result);
            };

            self.ResetFilter = function() {
                self.FilterTotalHours(0);
                self.items(self.repository);
                self.FilterProject("");
                $("#Res").hide();
            };

            self.PopulateArray();
        };
        var vModel = new TimeReportViewModel();
        ko.applyBindings(vModel);

    </script>

}
<h1>Time reports</h1>
<div class="row">
    <div class="col-xs-4">
        <table class="table table-bordered table-condensed">
            <thead>
                <tr>
                    <th><strong>Date</strong></th>
                    <th><strong>Project</strong></th>
                    <th><strong>Task</strong></th>
                    <th><strong>Type</strong></th>
                    <th><strong>Description</strong></th>
                    <th><strong>Duration</strong></th>
                    <th><strong>Overtime</strong></th>
                </tr>
            </thead>
            <tbody data-bind="foreach: vModel.items">
                <tr>
                    <td data-bind="text: Date"></td>
                    <td data-bind="text: Project"></td>
                    <td data-bind="text: Task"></td>
                    <td data-bind="text: Type"></td>
                    <td data-bind="text: Description"></td>
                    <td data-bind="text: Duration"></td>
                    <td data-bind="text: Overtime"></td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-xs-2">
        <div class="well">
            <div class="form-group">
                <label for="ProjectType">Project Type</label>
                <input type="text" placeholder="Project Type"  data-bind="value: vModel.FilterProject" id="ProjectType" class="form-control">
            </div>
            <button class="btn btn-sm btn-success" data-bind="click: vModel.Filter">Query</button>
            <button class="btn btn-sm btn-warning" data-bind="click: vModel.ResetFilter">Reset Filter</button>
            <hr />

            <div class="form-group" id="Res" style="display: none">
                <label >Totaly Hours</label>
                <p data-bind="text: vModel.FilterTotalHours"></p>
                <label >Totaly OverTime</label>
                <p data-bind="text: vModel.FilterTotalOverTime"></p>
            </div>
        </div>
    </div>
</div>
